// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.Game = (function(superClass) {
  extend(Game, superClass);

  function Game() {
    return Game.__super__.constructor.apply(this, arguments);
  }

  Game.prototype.initialize = function(params) {
    var dealer, deck, player;
    console.log(params);
    this.set('deck', deck = params);
    this.set('playerHand', player = deck.dealPlayer());
    this.set('dealerHand', dealer = deck.dealDealer());
    if (this.get("playerHand").scores() === "blackjack") {
      this.dealerTurn(this.get("playerHand").scores());
    }
    this.get("playerHand").on("stand", (function(_this) {
      return function() {
        return _this.dealerTurn(_this.get("playerHand").scores());
      };
    })(this));
    this.get("playerHand").on("bust", (function(_this) {
      return function() {
        return console.log("you lose sucker");
      };
    })(this));
    return this.get("dealerHand").on("bust", (function(_this) {
      return function() {
        return console.log("Dealer busted. You win!");
      };
    })(this));
  };

  Game.prototype.dealerTurn = function(score) {
    this.get("dealerHand").models[0].flip();
    while (this.get("dealerHand").scores() < 17) {
      this.get("dealerHand").hit();
    }
    if (this.get("dealerHand").scores() <= 21) {
      return this.calculateWin(score, this.get("dealerHand").scores());
    }
  };

  Game.prototype.calculateWin = function(player, dealer) {
    if (player === "blackjack") {
      player = 22;
    }
    if (dealer === "blackjack") {
      dealer = 22;
    }
    if (player > dealer) {
      return console.log("You win son!");
    } else if (player < dealer) {
      return console.log("You lose.");
    } else {
      return console.log("It's a push");
    }
  };

  return Game;

})(Backbone.Model);
