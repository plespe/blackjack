// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.App = (function(superClass) {
  extend(App, superClass);

  function App() {
    return App.__super__.constructor.apply(this, arguments);
  }

  App.prototype.initialize = function() {
    var deck;
    this.set('deck', deck = new Deck());
    this.set('chips', 2000);
    this.set('betAmount', 0);
    return this.set('dealt', false);
  };

  App.prototype.deal = function() {
    var game;
    this.set('dealt', true);
    this.set('game', game = new Game(this.get("deck")));
    return new GameView({
      model: game
    });
  };

  App.prototype.bet = function(amount) {
    var stack, total;
    total = (this.get('betAmount')) + amount;
    this.set('betAmount', total);
    stack = (this.get('chips')) - amount;
    return this.set('chips', stack);
  };

  return App;

})(Backbone.Model);
